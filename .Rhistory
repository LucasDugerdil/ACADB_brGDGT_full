GDGT.XRD <- data.frame(read.csv(file="paleo/XRD.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
GDGT.XRD
GDGT.XRD <- data.frame(read.csv(file="Import/Paleo/XRD.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
source("Import/Script/BRT_script.R")
GDGT.XRD <- data.frame(read.csv(file="Import/Paleo/XRD.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
GDGT.histo.plot.surf.core(Mcore = GDGT.XRD,
Iso.GDGT = F, Remove.8Me = T, Remove.7Me = T, W = 1600, H = 700,
Save.path = "Figures/Hist_brGDGT_XRD.pdf"
)
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
#### Import training data and script ####
BRT.brACA   <- readRDS("Import/Training/BRT_brACA.Rds")
BRT.brACA.karid   <- readRDS("Import/Training/BRT_brACA_karid.Rds")
BRT.brACA.kwet   <- readRDS("Import/Training/BRT_brACAkwet.Rds")
M.br.GDGT <- readRDS("Import/Training/M_brGDGT_ACADB.Rds")
source("Import/Script/BRT_script.R")
GDGT.XRD <- data.frame(read.csv(file="Import/Paleo/XRD.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
GDGT.XRD.conv <- GDGT.XRD[which(names(GDGT.XRD) %in% names(M.br.GDGT))]
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
#### Combined model ####
XRD.brACA <- readRDS("ResultsXRD_BRT_brACA.Rds")[[2]]
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
#### Import training data and script ####
BRT.brACA   <- readRDS("Import/Training/BRT_brACA.Rds")
BRT.brACA.karid   <- readRDS("Import/Training/BRT_brACA_karid.Rds")
BRT.brACA.kwet   <- readRDS("Import/Training/BRT_brACAkwet.Rds")
M.br.GDGT <- readRDS("Import/Training/M_brGDGT_ACADB.Rds")
Cluster.prediction.ACADB.brGDGT <- readRDS("Import/Training/Cluster.prediction.ACADB.brGDGT.Rds")
source("Import/Script/BRT_script.R")
GDGT.XRD <- data.frame(read.csv(file="Import/Paleo/XRD.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
#### Verify if the Fractional abundances of the cores are OK ####
GDGT.histo.plot.surf.core(Mcore = GDGT.XRD,
Iso.GDGT = F, Remove.8Me = T, Remove.7Me = T, W = 1600, H = 700,
Save.path = "Figures/Hist_brGDGT_XRD.pdf"
)
GDGT.XRD.conv <- GDGT.XRD[which(names(GDGT.XRD) %in% names(M.br.GDGT))]
XRD.brACA <- FT.core(Model.BRT = BRT.brACA,
MCore = GDGT.XRD.conv, MAge = GDGT.XRD$Age,
LakeName = "XRD", Only.fit = T, Save.RDS = T, Displot = F, GDGT = T,
Save.path = "Results/XRD.csv")
XRD.brACA <- FT.core(Model.BRT = BRT.brACA,
MCore = GDGT.XRD.conv, MAge = GDGT.XRD$Age,
LakeName = "XRD", Only.fit = T, Save.RDS = T, Displot = F, GDGT = T,
Save.path = "Results/XRD_BRT.csv")
GDGT.XRD.conv <- GDGT.XRD[which(names(GDGT.XRD) %in% names(M.br.GDGT))]
XRD.brACA <- FT.core(Model.BRT = BRT.brACA,
MCore = GDGT.XRD.conv, MAge = GDGT.XRD$Age,
LakeName = "XRD", Only.fit = T, Save.RDS = T, Displot = F, GDGT = T,
Save.path = "Results/XRD_BRT.csv")
XRD.brACA.karid <- FT.core(Model.BRT = BRT.brACA.karid,
MCore = GDGT.XRD.conv, MAge = GDGT.XRD$Age,
LakeName = "XRD", Only.fit = T, Save.RDS = T, Displot = F, GDGT = T,
Save.path = "Results/XRD_BRT.csv")
XRD.brACA.kwet <- FT.core(Model.BRT = BRT.brACA.kwet,
MCore = GDGT.XRD.conv, MAge = GDGT.XRD$Age,
LakeName = "XRD", Only.fit = T, Save.RDS = T, Displot = F, GDGT = T,
Save.path = "Results/XRD_BRT.csv")
#### Combined model ####
XRD.brACA <- readRDS("Results/XRD_BRT_brACA.Rds")[[2]]
XRD.brACA.karid <- readRDS("Results/XRD_BRT_karid.Rds")[[2]]
XRD.brACA.kwet <- readRDS("Results/XRD_BRT_kwet.Rds")[[2]]
pBRT.XRD <- Combine.ML.cluster(
List.models = list(M1 = XRD.brACA, M2 = XRD.brACA.karid, M3 = XRD.brACA.kwet),
Model.lab = c("ACADB", "K-warm/arid", "K-cold/wet"),
Cluster.prediction = Cluster.prediction.ACADB.brGDGT,
GDGT.paleo = GDGT.XRD, Time.lim = c(0, 7200),
Surf.val = Cores.metadata$MAAT[row.names(Cores.metadata) == "XRD"],
Compare.curve = c("MAAT_mr_DJ", "MAAT_DJ_5Me", "MAAT_NMSDB_mr5"), Core.name = "(C) XRD (Qaidam)",
Plot.y = "Age", Plot.y.lab = "Age (yr cal BP)", Param.clim = "MAAT", Cluster.prob = "K-cold/wet",
Facet = F, Only.best = F, Show.proba = T, Highlight.combined = T,
Save.path = "Resultats/China/GDGT/Cores/XRD/Func_trans/XRD_brACA_combined.Rds"
)
XRD.metadata  <- data.frame(read.csv(file="Import/Paleo/XRD_metadata.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
XRD.metadata
Actual.val <- Cores.metadata[c(4,5,16,13,31,32),]
Actual.val <- XRD.metadata[c(4,5,16,13,31,32),]
Actual.val
XRD.metadata  <- data.frame(read.csv(file="Import/Paleo/XRD_metadata.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
XRD.metadata
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
XRD.brACA
XRD.brACA.karid
XRD.brACA.kwet
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R", echo=TRUE)
XRD.brACA
Cluster.prediction.ACADB.brGDGT
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/Import/Script/BRT_script.R")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
Cluster.prediction.ACADB.brGDGT
GDGT.XRD
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/Import/Script/BRT_script.R")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
XRD.brACA
XRD.brACA <- FT.core(Model.BRT = BRT.brACA, MCore = GDGT.XRD.conv, MAge = GDGT.XRD$Age, Save.path = "Results/XRD_BRT.csv")
XRD.brACA
XRD.rTF.ACADB <- Plot.randomTF(MPsurf = M.br.GDGT, MPpaleo = GDGT.XRD.conv,  Mclim = MC, Database = "ACADB", Lake = "XRD", Plot.MAT = F, Plot.WAPLS = F,
Save.path = "Results/XRD_randomFT_ACADB.Rds", return.plot = T, Plot.RF = T, Plot.BRT = T,
H = 500, W = 2000, Save.plot = "Figures/XRD_randomTF_ACADB.pdf")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
XRD.rTF.ACADB <- Plot.randomTF(MPsurf = M.br.GDGT, MPpaleo = GDGT.XRD.conv,  Mclim = MC, Database = "ACADB", Lake = "XRD",
Save.path = "Results/XRD_randomFT_ACADB.Rds",
H = 500, W = 2000, Save.plot = "Figures/XRD_randomTF_ACADB.pdf")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/Import/Script/BRT_script.R")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
XRD.rTF.ACADB <- Plot.randomTF(MPsurf = M.br.GDGT, MPpaleo = GDGT.XRD.conv,  Mclim = MC, Database = "ACADB", Lake = "XRD",
Save.path = "Results/XRD_randomFT_ACADB.Rds",
H = 500, W = 2000, Save.plot = "Figures/XRD_randomTF_ACADB.pdf")
MC <- saveRDS("Import/Training/M_clim_ACADB.Rds")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
XRD.rTF.ACADB <- Plot.randomTF(MPsurf = M.br.GDGT, MPpaleo = GDGT.XRD.conv,  Mclim = MC, #Database = "ACADB", Lake = "XRD",
Save.path = "Results/XRD_randomFT_ACADB.Rds",
H = 500, W = 2000, Save.plot = "Figures/XRD_randomTF_ACADB.pdf")
source("~/Documents/Recherche/R_stats/Project_GitHub/ACADB_brGDGT_calibrations/main.R")
XRD.rTF.ACADB <- Plot.randomTF(MPsurf = M.br.GDGT, MPpaleo = GDGT.XRD.conv,  Mclim = MC, #Database = "ACADB", Lake = "XRD",
Save.path = "Results/XRD_randomFT_ACADB.Rds",
H = 500, W = 2000, Save.plot = "Figures/XRD_randomTF_ACADB.pdf")
GDGT.XRD
#### Import paleo data ####
GDGT.XRD <- data.frame(read.csv(file="Import/Paleo/XRD.csv", sep=",",dec=".",header=T,row.names=1))        # GDGT indexe Ayrag
GDGT.XRD
rm(list = ls()
)
